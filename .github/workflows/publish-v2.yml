name: Publish V2
# Required secrets for this workflow: MAINTAIN_USERNAME, MAINTAIN_EMAIL, SLACK_TOKEN, SLACK_CHANNELS, MAINTAIN_TOKEN

on: [workflow_dispatch]

jobs:
  publish:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MAINTAIN_TOKEN }}
      - name: Install Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Parse ref branch name
        uses: ./.github/workflows/parse-branch-name
        with:
          BRANCH_NAME: ${{ github.ref }}
      - name: Download release zip file from RC tag artifact
        uses: robinraju/release-downloader@v1.7
        with:
          tag: v${{ env.CLEAN_PACKAGE_NAME }}
          fileName: ${{ github.event.repository.name }}-${{ env.CLEAN_PACKAGE_NAME }}.zip
          out-file-path: /tmp/
      - name: Download change log file from RC tag artifact
        uses: robinraju/release-downloader@v1.7
        with:
          tag: v${{ env.CLEAN_PACKAGE_NAME }}
          fileName: temp-changelog.txt
          out-file-path: /tmp/
      - name: Upload zip file to GitHub actions artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ env.CLEAN_PACKAGE_NAME }}.zip
          path: /tmp/${{ github.event.repository.name }}-${{ env.CLEAN_PACKAGE_NAME }}.zip
          if-no-files-found: error
      - name: Get Release Name
        uses : ./.github/workflows/get-release-name
        with:
          BUILD_ZIP_FILE_PATH: /tmp/${{ github.event.repository.name }}-${{ env.CLEAN_PACKAGE_NAME }}.zip
          PLUGIN_NAME: ${{ github.event.repository.name }}
          CHANNEL: ${{ env.CHANNEL }}
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
      - name: Rename Release zip file to new release name
        uses : ./.github/workflows/copy-file
        with:
          SOURCE_PATH: /tmp/${{ github.event.repository.name }}-${{ env.CLEAN_PACKAGE_NAME }}.zip
          DESTINATION_PATH: /tmp/${{ env.RELEASE_FILENAME }}.zip
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_NAME }}
          files: /tmp/${{ env.RELEASE_FILENAME }}.zip
          body_path: /tmp/temp-changelog.txt
        env:
          GITHUB_TOKEN: ${{ secrets.MAINTAIN_TOKEN }}
      # - name: Read changelog and set current date
      #   if: ${{ env.CHANNEL == "ga" }} # Only for GA releases
      #   uses : ./.github/workflows/get-changelog-datetime
      # - name: Parse Jira Keys from changelog # Only for GA releases
      #   if: ${{ env.CHANNEL == "ga" }}
      #   id: jira_keys
      #   uses: HighwayThree/jira-extract-issue-keys@8050830121f3eab19553d2f0c0150873a8d1b51b
      #   with:
      #     commit-message: '${{ env.CHANGELOG }}'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Push Deployment Info to Jira
      #   if: steps.jira_keys.outputs.jira-keys != '' && ${{ env.CHANNEL == "ga" }}
      #   uses: HighwayThree/jira-upload-deployment-info@7cd4db1e5cc96692fd0b4c688407efd95ae3e610
      #   with:
      #     client-id: '${{ secrets.JIRA_CLIENT_ID }}'
      #     client-secret: '${{ secrets.JIRA_CLIENT_SECRET }}'
      #     cloud-instance-base-url: '${{ secrets.JIRA_CLOUD_INSTANCE_BASE_URL }}'
      #     issue-keys: "${{ steps.jira_keys.outputs.jira-keys }}"
      #     display-name: "${{ env.PACKAGE_VERSION }}"
      #     url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
      #     description: "This PR was merged to the following release(s)"
      #     last-updated: '${{ env.NOW }}'
      #     state: 'successful'
      #     pipeline-id: '${{ github.repository }} ${{ github.workflow }}'
      #     pipeline-url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
      #     environment-id: "${{ env.PACKAGE_VERSION }}"
      #     environment-display-name: "${{ env.PACKAGE_VERSION }}"
      #     environment-type: 'production'
      # - name: Publish to WordPress.org SVN
      #   if: ${{ env.CHANNEL == "ga" }}
      #   env:
      #     PLUGIN_VERSION: ${{ env.PACKAGE_VERSION }}
      #     SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
      #     SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
      #   run: |
      #     bash "${GITHUB_WORKSPACE}/.github/scripts/publish-to-wordpress-org.sh"
      - name: Remove git tag
        uses : ./.github/workflows/remove-git-tag
        with:
          MAINTAIN_USERNAME: ${{ secrets.MAINTAIN_USERNAME }}
          MAINTAIN_EMAIL: ${{ secrets.MAINTAIN_EMAIL }}
          TAG_NAME: v${{ env.CLEAN_PACKAGE_NAME }}
      - name: Send slack message
        uses: ./.github/workflows/slack-notify
        with:
          MESSAGE: "@here Elementor ${{ env.RELEASE_NAME }} has been released! Saddle up partners! :tada:"
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNELS: ${{ secrets.SLACK_CHANNELS }}
