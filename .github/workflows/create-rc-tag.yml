name: Create Rc Tag
# Required secrets for this workflow: MAINTAIN_USERNAME, MAINTAIN_EMAIL, SLACK_TOKEN, MAINTAIN_TOKEN, and a var: SLACK_TAG_CHANNELS.

env:
  TYPE: 'rc'
  CHANGELOG_FILE: 'temp-changelog.txt'

on:
  workflow_dispatch:
    inputs:
      channel:
        type: choice
        description: 'The channel to get the version to'
        required: true
        default: 'cloud'
        options:
          - 'ga'
          - 'cloud'
          - 'beta'
jobs:
  create-tag:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MAINTAIN_TOKEN }}
      - name: Get Configuration
        id: configuration
        uses: maork-elementor/json-to-variables@main
        with:
            filename: './.github/workflows/config.json'
            prefix: config
      - name: Test permissions
        uses: ./.github/workflows/permissions
        with:
          ENVIRONMENT: ${{ env.config_deployment_environment }}
          DEPLOYMENT_PERMITTED: ${{ env.config_deployment_permitted }}
          DEPLOYMENT_REPOSITORY_OWNER: ${{ env.config_deployment_repository_owner }}
      - name: Install Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Get New Package Version
        uses: ./.github/workflows/get-new-package-version
        with:
          CHANNEL: ${{ github.event.inputs.channel }}
          TYPE: ${{ env.TYPE }}
      - name: Bump Channel Version
        uses: ./.github/workflows/bump-channel-version
        with:
          REPO_NAME: ${{ github.event.repository.name }}
          CLEAN_PACKAGE_VERSION: ${{ env.PACKAGE_VERSION_CLEAN }}
          CHANNEL: ${{ github.event.inputs.channel }}
      - name: Install Dependencies
        run: |
          npm ci
      - name: Build plugin
        uses: ./.github/workflows/build-plugin
        with:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
          BUILD_SCRIPT_PATH: "./.github/scripts/build-zip.sh"
          UPDATE_VERSIONS_SCRIPT_PATH: ""
      - name: Upload zip file to GitHub actions artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PLUGIN_ZIP_FILENAME }}
          path: ${{ env.PLUGIN_ZIP_PATH }}
          if-no-files-found: error
      - name: Get Previous Release
        uses : ./.github/workflows/get-previous-release
        with:
          CHANNEL: ${{ github.event.inputs.channel }}
      - name: Generate changelog
        uses : ./.github/workflows/generate-changelog
        with:
          TOKEN: ${{ secrets.MAINTAIN_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          HEAD_BRANCH_NAME: v${{ env.PACKAGE_VERSION }}
          BASE_TAG_NAME: ${{ env.PREVIOUS_TAG_SHA }}
      - name: Set empty changelog if no changes
        run: |
            # upload-artifact action fails if the file size is 0.
            
            # Check the file size
            size=$(wc -c < "${{ env.CHANGELOG_FILE }}")
            if [ $size -eq 0 ]; then
              echo "No changelog" > "${{ env.CHANGELOG_FILE }}"
            fi
            
      - name: Upload changelog to GitHub actions artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CHANGELOG_FILE }}
          path: ${{ env.CHANGELOG_FILE }}
          if-no-files-found: error
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          files: |
            elementor-*.zip
            ${{ env.CHANGELOG_FILE }}
          prerelease: true
          body_path: ${{ env.CHANGELOG_FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.MAINTAIN_TOKEN }}
      - name: Send slack message
        uses: ./.github/workflows/slack-notify
        with:
          MESSAGE: "@here Elementor `${{ env.PACKAGE_VERSION }}` RC release created, please review changes. https://github.com/${{ github.repository }}/releases/tag/v${{ env.PACKAGE_VERSION }}"
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNELS: ${{ vars.SLACK_TAG_CHANNELS }}
