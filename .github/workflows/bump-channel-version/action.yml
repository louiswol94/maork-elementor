name: Bump Channel Version
description: Bump the version of the current channel, and set it as an environment variable. (The Bump is for the current build only, No changes are made to the repo)

inputs:
  CHANNEL:
    required: true
    description: 'The channel to bump the version to (cloud, beta).'
  REPO_NAME:
    required: true
    description: 'Github repository owner.'
  CLEAN_PACKAGE_VERSION:
    required: true
    description: 'The current package version.'
  MAINTAIN_USERNAME:
    required: true
    description: 'username of the maintainer.'
  MAINTAIN_EMAIL:
    required: true
    description: 'email of the maintainer.'

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
            # git config user.name ${{ inputs.MAINTAIN_USERNAME }}
            # git config user.email ${{ inputs.MAINTAIN_EMAIL }}

            # This command retrieves the latest tag that matches the specified channel and package version, 
            # and extracts the version number from the tag name using awk.
            CURRENT_CHANNEL_VERSION=$(git ls-remote --tags | grep -v "\-rc" | grep "${{ inputs.CHANNEL }}" | grep "{{ inputs.CLEAN_PACKAGE_VERSION }}" | tail -n1 | awk -F'${{ inputs.CHANNEL }}' '{print $2}')

            #if value is not a number (e.g. empty string) then set it to 0
            if ! [[ $CURRENT_CHANNEL_VERSION =~ ^[0-9]+$ ]]; then
                CURRENT_CHANNEL_VERSION=0
            fi

            NEW_CHANNEL_VERSION=$((CURRENT_CHANNEL_VERSION+1))
            ELEMENTOR_CHANNEL_PACKAGE_VERSION=${{ inputs.REPO_NAME }}-${{ inputs.CLEAN_PACKAGE_VERSION }}-${{ inputs.CHANNEL }}${NEW_CHANNEL_VERSION}

            if [[ ${{ inputs.CHANNEL }} == "ga" ]]; then
              ELEMENTOR_CHANNEL_PACKAGE_VERSION=${{ env.PACKAGE_VERSION_CLEAN }}
            fi

            sed -i -E "s/Version: .*/Version: ${ELEMENTOR_CHANNEL_PACKAGE_VERSION}/g" elementor.php
            sed -i -E "s/ELEMENTOR_VERSION', '.*'/ELEMENTOR_VERSION', '${ELEMENTOR_CHANNEL_PACKAGE_VERSION}'/g" elementor.php
            
            if [[ ${{ inputs.CHANNEL }} == "beta" ]]; then
                BETA_VERSION=${{ inputs.CLEAN_PACKAGE_VERSION }}-${{ inputs.CHANNEL }}${NEW_CHANNEL_VERSION}
                echo "BETA_VERSION=$BETA_VERSION" >> $GITHUB_ENV

                if grep -q "Beta tag:" ./readme.txt
                  then
                    echo "Replace existing beta tag in readme file"
                    sed -i -E "s/Beta tag: .*/Beta tag: $BETA_VERSION/g" ./readme.txt
                  else
                    echo "Add beta tag to readme file"
                    sed -i -E '/^Stable tag: .*/a\'$'\n'"Beta tag: $BETA_VERSION$(printf '\n\r')" ./readme.txt
                fi
            fi

            echo "ELEMENTOR_CHANNEL_PACKAGE_VERSION=${ELEMENTOR_CHANNEL_PACKAGE_VERSION}" >> $GITHUB_ENV
            echo "NEW_CHANNEL_VERSION=${NEW_CHANNEL_VERSION}" >> $GITHUB_ENV

